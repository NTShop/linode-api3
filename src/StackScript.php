<?php

//----------------------------------------------------------------------
//
//  Copyright (C) 2015 Artem Rodygin
//
//  This file is part of Linode API Client Library for PHP.
//
//  You should have received a copy of the GNU General Public License
//  along with the library. If not, see <http://www.gnu.org/licenses/>.
//
//----------------------------------------------------------------------

namespace Linode;

use Linode\BaseLinodeApi;

/**
 * This class is autogenerated.
 *
 * @version Linode API v3.3
 */
class StackScript extends BaseLinodeApi
{
    /**
     * Create a StackScript.
     *
     * @param   string  $Label              [required] The Label for this StackScript
     * @param   string  $rev_note           [optional]
     * @param   string  $script             [required] The actual script
     * @param   boolean $isPublic           [optional] Whether this StackScript is published in the Library, for everyone to use
     * @param   string  $Description        [optional]
     * @param   string  $DistributionIDList [required] Comma delimited list of DistributionIDs that this script works on
     *
     * @return  array
     */
    public function create($Label, $rev_note = null, $script = null, $isPublic = null, $Description = null, $DistributionIDList = null)
    {
        return $this->call('stackscript.create', array(
            'Label'              => $Label,
            'rev_note'           => $rev_note,
            'script'             => $script,
            'isPublic'           => $isPublic,
            'Description'        => $Description,
            'DistributionIDList' => $DistributionIDList,
        ));
    }

    /**
     *
     *
     * @param   integer $StackScriptID [required]
     *
     * @return  array
     */
    public function delete($StackScriptID)
    {
        return $this->call('stackscript.delete', array(
            'StackScriptID' => $StackScriptID,
        ));
    }

    /**
     * Lists StackScripts you have access to.
     *
     * @param   integer $StackScriptID [optional] Limits the list to the specified StackScriptID
     *
     * @return  array
     */
    public function getList($StackScriptID = null)
    {
        return $this->call('stackscript.list', array(
            'StackScriptID' => $StackScriptID,
        ));
    }

    /**
     * Update a StackScript.
     *
     * @param   string  $rev_note           [optional]
     * @param   string  $script             [optional] The actual script
     * @param   string  $DistributionIDList [optional] Comma delimited list of DistributionIDs that this script works on
     * @param   string  $Description        [optional]
     * @param   string  $Label              [optional] The Label for this StackScript
     * @param   boolean $isPublic           [optional] Whether this StackScript is published in the Library, for everyone to use
     * @param   integer $StackScriptID      [required]
     *
     * @return  array
     */
    public function update($rev_note = null, $script = null, $DistributionIDList = null, $Description = null, $Label = null, $isPublic = null, $StackScriptID = null)
    {
        return $this->call('stackscript.update', array(
            'rev_note'           => $rev_note,
            'script'             => $script,
            'DistributionIDList' => $DistributionIDList,
            'Description'        => $Description,
            'Label'              => $Label,
            'isPublic'           => $isPublic,
            'StackScriptID'      => $StackScriptID,
        ));
    }
}
