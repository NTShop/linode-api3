<?php

//----------------------------------------------------------------------
//
//  Copyright (C) 2015 Artem Rodygin
//
//  This file is part of Linode API Client Library for PHP.
//
//  You should have received a copy of the MIT License along with
//  the library. If not, see <http://opensource.org/licenses/MIT>.
//
//----------------------------------------------------------------------

namespace Linode;

use Linode\BaseLinodeApi;

/**
 * This class is autogenerated.
 *
 * @version Linode API v3.3
 */
class AvailApi extends BaseLinodeApi
{
    /**
     * Returns a list of Linode data center facilities.
     *
     * @return  array
     */
    public function dataCenters()
    {
        return $this->call('avail.datacenters');
    }

    /**
     * Returns a list of available Linux Distributions.
     *
     * @param   integer $DistributionID [optional] Limits the results to the specified DistributionID
     *
     * @return  array
     */
    public function distributions($DistributionID = null)
    {
        return $this->call('avail.distributions', array(
            'DistributionID' => $DistributionID,
        ));
    }

    /**
     * List available kernels.
     *
     * @param   boolean $isXen    [optional] Limits the results to show only Xen kernels
     * @param   integer $KernelID [optional]
     *
     * @return  array
     */
    public function kernels($isXen = null, $KernelID = null)
    {
        return $this->call('avail.kernels', array(
            'isXen'    => $isXen,
            'KernelID' => $KernelID,
        ));
    }

    /**
     * Returns a structure of Linode PlanIDs containing the Plan label and the availability in each Datacenter.
     *
     * @param   integer $PlanID [optional] Limits the list to the specified PlanID
     *
     * @return  array
     */
    public function linodePlans($PlanID = null)
    {
        return $this->call('avail.linodeplans', array(
            'PlanID' => $PlanID,
        ));
    }

    /**
     * Returns NodeBalancer pricing information.
     *
     * @return  array
     */
    public function nodeBalancers()
    {
        return $this->call('avail.nodebalancers');
    }

    /**
     * Returns a list of available public StackScripts.
     *
     * @param   integer $DistributionID     [optional] Limit the results to StackScripts that can be applied to this DistributionID
     * @param   string  $keywords           [optional] Search terms
     * @param   string  $DistributionVendor [optional] Debian, Ubuntu, Fedora, etc.
     *
     * @return  array
     */
    public function stackScripts($DistributionID = null, $keywords = null, $DistributionVendor = null)
    {
        return $this->call('avail.stackscripts', array(
            'DistributionID'     => $DistributionID,
            'keywords'           => $keywords,
            'DistributionVendor' => $DistributionVendor,
        ));
    }
}
