<?php

//----------------------------------------------------------------------
//
//  Copyright (C) 2015 Artem Rodygin
//
//  This file is part of Linode API Client Library for PHP.
//
//  You should have received a copy of the GNU General Public License
//  along with the library. If not, see <http://www.gnu.org/licenses/>.
//
//----------------------------------------------------------------------

namespace Linode\Domain;

use Linode\BaseLinodeApi;

/**
 * This class is autogenerated.
 *
 * @version Linode API v3.3
 */
class Resource extends BaseLinodeApi
{
    /**
     * Create a domain record.
     *
     * @param   integer $DomainID [required]
     * @param   integer $Port     [optional]
     * @param   string  $Name     [optional] The hostname or FQDN.  When Type=MX the subdomain to delegate to the Target MX server.
     * @param   integer $Weight   [optional]
     * @param   string  $Target   [optional] When Type=MX the hostname.  When Type=CNAME the target of the alias.  When Type=TXT the value of the record.  
		When Type=A or AAAA the token of '[remote_addr]' will be substituted with the IP address of the request.
     * @param   integer $Priority [optional] Priority for MX and SRV records, 0-255
     * @param   integer $TTL_sec  [optional] TTL.  Leave as 0 to accept our default.
     * @param   string  $Protocol [optional] The protocol to append to an SRV record.  Ignored on other record types.
     * @param   string  $Type     [required] One of: NS, MX, A, AAAA, CNAME, TXT, or SRV
     *
     * @return  array
     */
    public function create($DomainID, $Port = null, $Name = null, $Weight = null, $Target = null, $Priority = null, $TTL_sec = null, $Protocol = null, $Type = null)
    {
        return $this->call('domain.resource.create', array(
            'DomainID' => $DomainID,
            'Port'     => $Port,
            'Name'     => $Name,
            'Weight'   => $Weight,
            'Target'   => $Target,
            'Priority' => $Priority,
            'TTL_sec'  => $TTL_sec,
            'Protocol' => $Protocol,
            'Type'     => $Type,
        ));
    }

    /**
     *
     *
     * @param   integer $DomainID   [required]
     * @param   integer $ResourceID [required]
     *
     * @return  array
     */
    public function delete($DomainID, $ResourceID)
    {
        return $this->call('domain.resource.delete', array(
            'DomainID'   => $DomainID,
            'ResourceID' => $ResourceID,
        ));
    }

    /**
     *
     *
     * @param   integer $DomainID   [required]
     * @param   integer $ResourceID [optional]
     *
     * @return  array
     */
    public function getList($DomainID, $ResourceID = null)
    {
        return $this->call('domain.resource.list', array(
            'DomainID'   => $DomainID,
            'ResourceID' => $ResourceID,
        ));
    }

    /**
     * Update a domain record.
     *
     * @param   integer $DomainID   [optional]
     * @param   integer $Port       [optional]
     * @param   integer $ResourceID [required]
     * @param   string  $Name       [optional] The hostname or FQDN.  When Type=MX the subdomain to delegate to the Target MX server.
     * @param   integer $Weight     [optional]
     * @param   string  $Target     [optional] When Type=MX the hostname.  When Type=CNAME the target of the alias.  When Type=TXT the value of the record.  
		When Type=A or AAAA the token of '[remote_addr]' will be substituted with the IP address of the request.
     * @param   integer $Priority   [optional] Priority for MX and SRV records, 0-255
     * @param   integer $TTL_sec    [optional] TTL.  Leave as 0 to accept our default.
     * @param   string  $Protocol   [optional] The protocol to append to an SRV record.  Ignored on other record types.
     *
     * @return  array
     */
    public function update($DomainID = null, $Port = null, $ResourceID = null, $Name = null, $Weight = null, $Target = null, $Priority = null, $TTL_sec = null, $Protocol = null)
    {
        return $this->call('domain.resource.update', array(
            'DomainID'   => $DomainID,
            'Port'       => $Port,
            'ResourceID' => $ResourceID,
            'Name'       => $Name,
            'Weight'     => $Weight,
            'Target'     => $Target,
            'Priority'   => $Priority,
            'TTL_sec'    => $TTL_sec,
            'Protocol'   => $Protocol,
        ));
    }
}
