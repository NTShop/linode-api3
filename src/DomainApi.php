<?php

//----------------------------------------------------------------------
//
//  Copyright (C) 2015 Artem Rodygin
//
//  This file is part of Linode API Client Library for PHP.
//
//  You should have received a copy of the MIT License along with
//  the library. If not, see <http://opensource.org/licenses/MIT>.
//
//----------------------------------------------------------------------

namespace Linode;

use Linode\BaseLinodeApi;

/**
 * This class is autogenerated.
 *
 * @version Linode API v3.3
 */
class DomainApi extends BaseLinodeApi
{
    /**
     * Create a domain record.
     *
     * @param   string  $Domain           [required] The zone's name
     * @param   string  $Type             [required] master or slave
     * @param   string  $Description      [optional] Currently undisplayed.
     * @param   string  $SOA_Email        [optional] Required when type=master
     * @param   integer $status           [optional] 0, 1, or 2 (disabled, active, edit mode)
     * @param   string  $lpm_displayGroup [optional] Display group in the Domain list inside the Linode DNS Manager
     * @param   string  $master_ips       [optional] When type=slave, the zone's master DNS servers list, semicolon separated
     * @param   string  $axfr_ips         [optional] IP addresses allowed to AXFR the entire zone, semicolon separated
     * @param   integer $TTL_sec          [optional]
     * @param   integer $Refresh_sec      [optional]
     * @param   integer $Retry_sec        [optional]
     * @param   integer $Expire_sec       [optional]
     *
     * @return  array
     */
    public function create($Domain, $Type, $Description = null, $SOA_Email = null, $status = null, $lpm_displayGroup = null, $master_ips = null, $axfr_ips = null, $TTL_sec = null, $Refresh_sec = null, $Retry_sec = null, $Expire_sec = null)
    {
        return $this->call('domain.create', array(
            'Domain'           => $Domain,
            'Type'             => $Type,
            'Description'      => $Description,
            'SOA_Email'        => $SOA_Email,
            'status'           => $status,
            'lpm_displayGroup' => $lpm_displayGroup,
            'master_ips'       => $master_ips,
            'axfr_ips'         => $axfr_ips,
            'TTL_sec'          => $TTL_sec,
            'Refresh_sec'      => $Refresh_sec,
            'Retry_sec'        => $Retry_sec,
            'Expire_sec'       => $Expire_sec,
        ));
    }

    /**
     *
     *
     * @param   integer $DomainID [required]
     *
     * @return  array
     */
    public function delete($DomainID)
    {
        return $this->call('domain.delete', array(
            'DomainID' => $DomainID,
        ));
    }

    /**
     * Lists domains you have access to.
     *
     * @param   integer $DomainID [optional] Limits the list to the specified DomainID
     *
     * @return  array
     */
    public function getList($DomainID = null)
    {
        return $this->call('domain.list', array(
            'DomainID' => $DomainID,
        ));
    }

    /**
     * Update a domain record.
     *
     * @param   integer $DomainID         [required]
     * @param   string  $Domain           [optional] The zone's name
     * @param   string  $Type             [optional] master or slave
     * @param   string  $Description      [optional] Currently undisplayed.
     * @param   string  $SOA_Email        [optional] Required when type=master
     * @param   integer $status           [optional] 0, 1, or 2 (disabled, active, edit mode)
     * @param   string  $lpm_displayGroup [optional] Display group in the Domain list inside the Linode DNS Manager
     * @param   string  $master_ips       [optional] When type=slave, the zone's master DNS servers list, semicolon separated
     * @param   string  $axfr_ips         [optional] IP addresses allowed to AXFR the entire zone, semicolon separated
     * @param   integer $TTL_sec          [optional]
     * @param   integer $Refresh_sec      [optional]
     * @param   integer $Retry_sec        [optional]
     * @param   integer $Expire_sec       [optional]
     *
     * @return  array
     */
    public function update($DomainID, $Domain = null, $Type = null, $Description = null, $SOA_Email = null, $status = null, $lpm_displayGroup = null, $master_ips = null, $axfr_ips = null, $TTL_sec = null, $Refresh_sec = null, $Retry_sec = null, $Expire_sec = null)
    {
        return $this->call('domain.update', array(
            'DomainID'         => $DomainID,
            'Domain'           => $Domain,
            'Type'             => $Type,
            'Description'      => $Description,
            'SOA_Email'        => $SOA_Email,
            'status'           => $status,
            'lpm_displayGroup' => $lpm_displayGroup,
            'master_ips'       => $master_ips,
            'axfr_ips'         => $axfr_ips,
            'TTL_sec'          => $TTL_sec,
            'Refresh_sec'      => $Refresh_sec,
            'Retry_sec'        => $Retry_sec,
            'Expire_sec'       => $Expire_sec,
        ));
    }
}
